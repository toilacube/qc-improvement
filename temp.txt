#Function to save a base 64  to a file
@controller.action("Save image buffer to file")
def save_img(filename="screenshot.png", output_folder="screenshots"):
    global browser
    os.makedirs(output_folder, exist_ok=True)
    
    # # Define full file path

    context: BrowserContext = browser.new_context()
    # Save the screenshot to the specified file
    base64 = context.take_screenshot(full_page=True)

    file_path = save_screenshot_from_base64(base64, filename, output_folder)

    return (f"Screenshot saved: {file_path}")

def save_screenshot_from_base64(screenshot_b64: str, filename = "screenshot.png", output_folder = "screenshots") -> str:
    os.makedirs(output_folder, exist_ok=True)
    
    # Decode the base64 string
    screenshot_data = base64.b64decode(screenshot_b64)
    # Create the full file path
    file_path = os.path.join(output_folder, filename)
    # Save the screenshot to a file
    with open(file_path, "wb") as f:
        f.write(screenshot_data)
    return file_path


Take a screenshot using save_img and save it as "main_page.png".
Scroll down by one page and take a screenshot using save_img and save it as "current_price.png".


Use hover_and_screenshot function with  proper parameters (the selector should be  strict structural selector) to hover over one specific element on the menu and take a screenshot.
